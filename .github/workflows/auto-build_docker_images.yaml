###########################################################################
#
# Project: RAthena-Docker
# Source: https://github.com/florentortiz/RAthena-Docker
# Created by: florentortiz, Mido-tw
#
# We highly encourage the community to share their ideas and contributions. 
# Your insights and improvements are valuable to us, and we welcome any form of 
# contribution, be it through issues, pull requests, or discussions.
# Let's build something great together!
#
###############################################################################

# This workflow will manage the build of our Docker images
name: Auto tags - RAthena-Docker - Build docker images for Ragnarok server

# Controls when the action will run. 
on:
  # Workflow that will trigger on pull request on the "main" branch
  pull_request:
    types:
      - closed
    branches:
      - main

# Will allow the Github_token and the workflow to write in the checkout repository to update the docker-compose file
# VERY IMPORTANT as otherwise you will have "403 error" and even with a PAT in the url it will not work
# Can be put on the Job layer for better security, will test it later
permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: show
        run: echo "${{ github.ref_name }} -- ${{ github.head_ref }} -- ${{ github.ref }} -- ${{ github.base_ref }}"
  # fluxcp:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-fluxcp          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}},value=$TAG

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/fluxcp/
  #         file: ./RagnarokDocker/fluxcp/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # mysql:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-mysql          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/mysql/
  #         file: ./RagnarokDocker/mysql/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # phpmyadmin:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-phpmyadmin          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/phpmyadmin/
  #         file: ./RagnarokDocker/phpmyadmin/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # robrowser:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-robrowser          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/robrowser/
  #         file: ./RagnarokDocker/robrowser/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # server:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-server        
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/server/
  #         file: ./RagnarokDocker/server/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # wsproxy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-wsproxy          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/wsproxy/ 
  #         file: ./RagnarokDocker/wsproxy/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # docker-compose:
  #   runs-on: ubuntu-latest
  #   needs: [fluxcp, mysql, phpmyadmin, robrowser, server, wsproxy]
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: 'main' # Have to put this as we are triggering with a tag event, so HEAD is detached

  #     # Here we can use the "github.ref.name" as we only trigger the workflow from a push TAG event, so the tag will be the ref name
  #     - name: Docker-compose update
  #       env:
  #         TAG_ID: ${{ github.ref_name }}
  #       run: sed -Ei "s/v[0-9]+\.[0-9]+\.[0-9]+/${TAG_ID}/g" RagnarokDocker/img-docker-compose.yml*

  #     - name: Docker-compose show
  #       run: cat RagnarokDocker/img-docker-compose.yml

  #     - name: Git push for docker-compose
  #       env:
  #         TAG_ID: ${{ github.ref_name }}
  #       run: |
  #         git config user.name github-actions
  #         git config user.email github-actions@github.com
  #         git add RagnarokDocker/img-docker-compose.yml
  #         git commit -m "ci: update image version ${TAG_ID} - generated by CI"
  #         git push

  # create-tag-release:
  #   runs-on: ubuntu-latest
  #   #needs: [docker-compose]
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     # By default it will use the "X.X.X" of "release-X.X.X"
  #     - name: Bump version and push tag
  #       id: tag_version
  #       uses: mathieudutour/github-tag-action@v6.1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         custom_tag: TAG

  #     - name: Create Release for RAthena-Docker
  #       uses: ncipollo/release-action@v1.13.0
  #       with:
  #         tag: ${{ steps.tag_version.outputs.new_tag }}
  #         generateReleaseNotes: true
  #         makeLatest: true
  #         name: "Ragnarok Docker ${{ steps.tag_version.outputs.new_tag }}"
            